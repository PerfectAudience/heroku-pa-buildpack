#!/usr/bin/env bash

### Configure environment
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o posix      # more strict failures in subshells
# set -x          # enable debugging

indent() {
  sed -u 's/^/       /'
}

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

# We only want to install MongoDB for testing
if [ "$(cat $ENV_DIR/RAILS_ENV)" != "test" ]; then
  echo "-----> TEST environment not detected, exiting"
  exit 0
fi

APP_DIR="${BUILD_DIR}/mongodb/"
APP_CACHE="${CACHE_DIR}/mongodb/"

OS="linux"
ARCH="x86_64"
VERSION="3.0.15"
FILENAME="mongodb-${OS}-${ARCH}-${VERSION}"


echo "-----> Creating MongoDB environment"

cd $BUILD_DIR
mkdir -p "$APP_DIR"
mkdir -p "$APP_CACHE"
mkdir -p "${BUILD_DIR}/.profile.d"
mkdir -p "${BUILD_DIR}/db/mongodb"


echo "-----> Downloading ${FILENAME}.tgz"

cd $APP_CACHE
curl -Os https://fastdl.mongodb.org/${OS}/${FILENAME}.tgz && tar -zxvf ${FILENAME}.tgz | indent


echo "-----> Installing MongoDB"

cd $BUILD_DIR
cp -R -n $APP_CACHE/$FILENAME/* $APP_DIR | indent

echo "export PATH=\"\$HOME/mongodb/bin:\$PATH\"" > "${BUILD_DIR}/.profile.d/mongo.sh"
